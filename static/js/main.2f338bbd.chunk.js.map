{"version":3,"sources":["logo.svg","Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","useState","buttonType","setButtonType","buttonValue","setButtonValue","buttonDisabled","setButtonDisabled","buttonShadow","setButtonShadow","buttonStyles","setButtonStyles","buttonIcon","setButtonIcon","iconPlacement","setIconPlacement","buttonWidth","setButtonWidth","buttonHeight","setButtonHeight","useEffect","backgroundColor","console","log","color","border","alert","boxShadow","handleChange","e","target","value","shadow","className","class","buttonPlacementLeft","href","style","height","width","disabled","buttonPlacementRight","for","type","id","onClick","checked","onToggle","display","justifyContent","alignItems","FormControlLabel","margin","control","Switch","min","max","onChange","background","textDecoration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f338bbd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react'\r\nimport './Button.css'\r\nimport ToggleButton from 'react-toggle-button'\r\n//import Toggle from 'react-toggle'\r\nimport { ToggleSwitch } from 'react-dragswitch'\r\nimport 'react-dragswitch/dist/index.css'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { GithubPicker } from 'react-color'\r\n\r\n\r\n\r\n\r\n\r\nconst Button = () => {\r\n\r\n    const [buttonType, setButtonType] = useState('Default');\r\n    const [buttonValue, setButtonValue] = useState('Button');\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n    const [buttonShadow, setButtonShadow] = useState(true);\r\n    const [buttonStyles, setButtonStyles] = useState({})\r\n    const [buttonIcon, setButtonIcon] = useState('add_shopping_cart')\r\n    const [iconPlacement, setIconPlacement] = useState(true)\r\n    const [buttonWidth, setButtonWidth] = useState('150')\r\n    const [buttonHeight, setButtonHeight] = useState('70')\r\n    const [buttonColor, setButtonColor] = useState('darkslategrey')\r\n\r\n    useEffect(() => {\r\n\r\n        if (buttonType === 'Default') {\r\n            setButtonStyles({ backgroundColor: 'darkslategrey' })\r\n        } else if (buttonType === 'Text') {\r\n            setButtonStyles({ backgroundColor: 'darkslategrey' })\r\n        } else if (buttonType === 'Outline') {\r\n            console.log('Button is Outline')\r\n            setButtonStyles({ backgroundColor: 'whitesmoke', color: 'darkslategrey', border: '1px solid darkslategray' })\r\n        } else {\r\n            alert('ButtonType error in UseEffect')\r\n        }\r\n\r\n    }, [buttonType]);\r\n\r\n    useEffect(() => {\r\n        if (!buttonShadow && buttonType === 'Outline') {\r\n            setButtonStyles({ boxShadow: 'none', backgroundColor: 'whitesmoke', color: 'darkslategray', border: '1px solid darkslategray' })\r\n        } else if (!buttonShadow) {\r\n            setButtonStyles({ boxShadow: 'none' })\r\n        } else if (buttonShadow && buttonType === 'Outline') {\r\n            setButtonStyles({ boxShadow: '0 10px 17px -4px black', backgroundColor: 'whitesmoke', color: 'darkslategray', border: '1px solid darkslategray' })\r\n        } else {\r\n            setButtonStyles({ boxShadow: '0 10px 17px -4px black' })\r\n        }\r\n    }, [buttonShadow]);\r\n    \r\n  \r\n\r\n    const handleChange = (e) => {\r\n        setButtonType(e.target.value);\r\n        (e.target.value === 'Text') ? setButtonValue('Text') : setButtonValue('Button')\r\n    }\r\n    const buttonPlacementLeft = () => {\r\n        if (!iconPlacement) {\r\n            return <span class=\"material-icons\">{buttonIcon}</span>\r\n        }\r\n    }\r\n    const buttonPlacementRight = () => {\r\n        if (iconPlacement) {\r\n            return <span class=\"material-icons\">{buttonIcon}</span>\r\n        }\r\n    }\r\n    const shadow = (buttonShadow)?'0 10px 17px -4px black':'none'\r\n    return (\r\n        <div className=\"bg\">\r\n            <div className=\"buttonContainer\">\r\n                {buttonPlacementLeft()}\r\n                <button href='#' className=\"button\" style={buttonStyles, { color: buttonStyles.color, border: buttonStyles.border, backgroundColor: buttonStyles.backgroundColor, height:buttonHeight+'px', width: buttonWidth+'px', boxShadow:shadow}} disabled={buttonDisabled}>{buttonValue}</button>\r\n                {buttonPlacementRight()}\r\n            </div>\r\n            <div className=\"buttonSidebar\">\r\n                <section>\r\n                    <p className=\"sectionHeader\">Button Type</p>\r\n                    <label for=\"Default\"><input type=\"radio\" id=\"Default\" value=\"Default\" onClick={handleChange} checked={buttonType === 'Default'} />Default</label>\r\n                    <label for=\"Text\"><input type=\"radio\" id=\"Text\" value=\"Text\" onClick={handleChange} checked={buttonType === 'Text'} />Text</label>\r\n                    <label for=\"Outline\"><input type=\"radio\" id=\"Outline\" value=\"Outline\" onClick={handleChange} checked={buttonType === 'Outline'} />Outline</label>\r\n                </section>\r\n                <section id=\"singleInputSection\">\r\n                    <p className=\"sectionHeader\">Disable Button</p>\r\n                    <ToggleButton value={buttonDisabled} onToggle={(value) => setButtonDisabled(!value)} />\r\n                </section>\r\n                <section id=\"singleInputSection\">\r\n                    <p className=\"sectionHeader\">Disable Shadow</p>\r\n                    <ToggleButton value={buttonShadow} onToggle={(value) => setButtonShadow(!value)} />\r\n                </section>\r\n                <section>\r\n                    <p className=\"sectionHeader\">Icon Placement</p>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', width: '100%' }}><span>Left</span>\r\n                        <FormControlLabel style={{ margin: '0px' }}\r\n                            control={<Switch checked={iconPlacement} value={iconPlacement} onClick={() => setIconPlacement(!iconPlacement)} />}\r\n\r\n                        />\r\n                        {/* <ToggleButton value={iconPlacement} onToggle={(value) => setIconPlacement(!value)} /> */}\r\n                        <span>Right</span>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <p className=\"sectionHeader\">Button Icon</p>\r\n                    <label for=\"add_shopping_cart\"><input type=\"radio\" value=\"add_shopping_cart\" onClick={(e) => setButtonIcon(e.target.value)} checked={buttonIcon === 'add_shopping_cart'} /><span class=\"material-icons\">add_shopping_cart</span></label>\r\n                    <label for=\"build\"><input type=\"radio\" value=\"build\" onClick={(e) => setButtonIcon(e.target.value)} checked={buttonIcon === 'build'} /><span class=\"material-icons\">build</span></label>\r\n                    <label for=\"code\"><input type=\"radio\" value=\"code\" onClick={(e) => setButtonIcon(e.target.value)} checked={buttonIcon === 'code'} /><span class=\"material-icons\">code</span></label>\r\n                    <label for=\"check\"><input type=\"radio\" value=\"check\" onClick={(e) => setButtonIcon(e.target.value)} checked={buttonIcon === 'check'} /><span class=\"material-icons\">check</span></label>\r\n                    <label for=\"search\"><input type=\"radio\" value=\"search\" onClick={(e) => setButtonIcon(e.target.value)} checked={buttonIcon === 'search'} /><span class=\"material-icons\">search</span></label>\r\n                </section>\r\n                <section>\r\n                    <p className='sectionHeader'>Button Sizing</p>\r\n                    <div class=\"slidecontainer\">\r\n                    <span>Width:</span> <input type=\"range\" min=\"125\" max=\"220\" value={buttonWidth} class=\"slider\" id=\"width\" onChange={(e)=> setButtonWidth(e.target.value) }/>\r\n                    <span>Height:</span> <input type=\"range\" min=\"50\" max=\"100\" value={buttonHeight} class=\"slider\" id=\"height\" onChange={(e)=> setButtonHeight(e.target.value) }/>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <p className='sectionHeader'>Button Color</p>\r\n                    <div onClick={(e)=> setButtonStyles({ backgroundColor: e.target.style.background })}>\r\n                    <GithubPicker />\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <div className='footer'>\r\n            <div class=\"footer-copyright text-center p-3 grey lighten-1 text-black-50\" style={{color: 'white'}}> \r\n    © 2021 :\r\n    <a id=\"footer-link-react-copyright\" class=\"black-text\" style={{color: 'white', textDecoration:'none'}} href=\"http://chaselipscomb.github.io/\">\r\n       Chase Lipscomb DevChallenges.io\r\n    </a>\r\n  </div>\r\n            </div>\r\n            \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Button from './Button';\r\n\r\nfunction App() {\r\n  return (\r\n    // <div className=\"App\">\r\n    //   <header className=\"App-header\">\r\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //     <p>\r\n    //       Edit <code>src/App.js</code> and save to reload.\r\n    //     </p>\r\n    //     <a\r\n    //       className=\"App-link\"\r\n    //       href=\"https://reactjs.org\"\r\n    //       target=\"_blank\"\r\n    //       rel=\"noopener noreferrer\"\r\n    //     >\r\n    //       Learn React\r\n    //     </a>\r\n    //   </header>\r\n    // </div>\r\n    <Button />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}